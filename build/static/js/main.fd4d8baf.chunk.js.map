{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","newtext","element","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","filter","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd4d8baf.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <href className=\"navbar-brand\" to=\"#\">{props.title}</href>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <href className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</href>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <href className=\"nav-link\" to=\"/about\">{props.aboutText}</href>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n       \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has been converted into UpperCase\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted into LowerCase\",\"success\")\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text has been copied into clipboard\",\"success\")\r\n    }\r\n\r\n    \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const dowloadText = () => {\r\n        let newtext = document.getElementById(\"myBox\");\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(newtext));\r\n        element.setAttribute('download',\"file.txt\");\r\n      \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n      \r\n        element.click();\r\n      \r\n       document.body.removeChild(element);\r\n      }\r\n      \r\n\r\n    let [text, setText] = useState(''); \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#173f60':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={dowloadText}>DownLoad Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:'40px'}} >\r\n   {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>  {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\r\nimport Navbar from './components/Navbar.js'\r\nimport TextForm from './components/TextForm.js'\r\nimport Alert from './components/Alert.js'\r\n// import About from './components/About.js'\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n// } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\n\r\n \r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message,type)=>{\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n\r\n  })\r\n  setTimeout(() => {\r\n    setAlert(null)\r\n  }, 2000);\r\n\r\n  } \r\n\r\n  const toggleMode = ()=>{\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enable\",\"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\r\n    {/* <Navbar/> */}\r\n    {/* <Router> */}\r\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n    <Alert alert={alert}></Alert>\r\n    <div className=\"container my-3\">\r\n    {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About  mode={mode} />\r\n          </Route>\r\n          <Route exact path=\"/\"> */}\r\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\r\n          {/* </Route> */}\r\n    {/* </Switch>   */}\r\n    </div>\r\n    {/* </Router> */}\r\n    </> \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}